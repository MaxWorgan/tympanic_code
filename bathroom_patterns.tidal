
setcps (113/60/4)

****

d1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "~ 0 ~ ~ 0 ~ ~ 0 ~ ~ ~ 0 ~ ~ ~ ~ ~"  # s "midi",
  n "2 ~ ~ 4 ~ ~ 4 ~ ~ ~ 4 ~ ~ ~ 4 ~ ~"  # s "midi",
  n "~ ~ ~ ~ 1 ~ ~ ~ ~ ~ 1 ~ ~ ~ ~ ~ ~" # s "midi"
  --every 2 (speed "-1") $ n "3(13,17,[1 2 0])" # s "midi"
  ]  -- # xsdelay (range 0 10 (slow 4 sine))
     -- # binshift (range 0 2 ( 0.5 + slow 2 sine))

jumpIn' 1 1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "0 ~ ~ 0 ~ 0 ~ ~ ~ 0 ~ ~ 0 ~ 0 ~ ~" # s "midi" # amp rand,
  n "3 ~ 3 ~ ~ 3 ~ ~ ~ 3 ~ ~ 3 ~ 3 ~ ~" # s "midi",
  n "~ ~ ~ ~ 1 ~ ~ ~ ~ ~ 2 ~ ~ ~ ~ ~ ~" # s "midi"
]


jumpIn' 1 1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "6 ~ 6 ~ ~ 6 ~ ~ ~ 6 ~ ~ 6 ~ 6 ~ ~" # s "midi" # rand,
  n "0 ~ ~ 0 ~ 0 ~ ~ ~ 0 ~ ~ 0 ~ 0 ~ ~" # s "midi",
  -- n "2 ~ ~ 4 ~ ~ 4 ~ ~ ~ 4 ~ ~ ~ 4 ~ ~"  # s "midi",
  n "~ ~ ~ ~ 1 ~ ~ ~ ~ ~ 1 ~ ~ ~ ~ ~ ~" # s "midi"
] --  # xsdelay (range 0 20 (slow 3 sine))
    -- # tsdelay (range 0 10 (slow 4 sine))
    -- # distort 0.4
   -- # freeze (range 0 0.4 (slow 1.5 sine))
--    # freeze "1 0 [1 1] 0 1 [1 0 1]"
    -- # binshift (0.2 + (slow 5 sine))
    --  # lbrick (fast 2 (range 1 0.8 sine))
    -- # enhance (slow 3 sine)
    -- # room 0.4
    -- # size 0.3

jumpIn' 1 1 $ every 3 (rev) $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "6 ~ 6 ~ ~ 6 ~ ~ ~ 6 ~ ~ 6 ~ 6 ~ ~" # s "midi" # amp 0.23,
  n "3 ~ 3 ~ ~ 3 ~ ~ ~ 3 ~ ~ 3 ~ ~ ~ 3" # s "midi",
  n "~ 0 ~ ~ 0 ~ ~ 0 ~ ~ ~ 0 ~ ~ ~ ~ ~"  # s "midi",
  n "2 ~ ~ 4 ~ ~ 4 ~ ~ ~ 4 ~ ~ ~ 4 ~ ~"  # s "midi",
  n "~ ~ ~ ~ 1 ~ ~ ~ ~ ~ 1 ~ ~ ~ ~ ~ ~" # s "midi"
  --every 2 (speed "-1") $ n "3(13,17,[1 2 0])" # s "midi"
  ]  -- # xsdelay (range 0 10 (slow 4 sine))
     -- # binshift (range 0 2 ( 0.5 + slow 2 sine))
     -- # room 0.2

clutch 1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "0 ~ 0 ~ ~ 0 ~ ~ ~ 0 ~ ~ 0 ~ 0 ~ ~" # s "midi",
  n "~ 5 ~ ~ 5 ~ ~ 5 ~ ~ ~ 5 ~ ~ ~ ~ ~"  # s "midi",
  every 2 rev $ n "~ 4 ~ ~ 4 ~ ~ 4 ~ ~ 4 ~ ~ ~ ~ ~ ~"  # s "midi",
  --n "7 ~ ~ 4 ~ ~ 4 ~ ~ ~ 4 ~ ~ ~ 4 ~ ~"  # s "midi", 
  n "~ ~ ~ ~ 8 ~ ~ ~ ~ ~ 8 ~ ~ ~ ~ ~ ~" # s "midi",
  n "3([9 13]/2,17,[0 2 4])" # s "midi"# gain (0.4 + slow 1.5 sine)
]

jumpIn' 1 1 $ every 7 (rev) $ every 5 (slow 2) $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "6 ~ 6 ~ ~ 6 ~ ~ ~ 6 ~ ~ 6 ~ 6 ~ ~" # s "midi" # amp rand,
  n "0 ~ ~ 0 ~ 0 ~ ~ ~ 0 ~ ~ 0 ~ 0 ~ ~" # s "midi",
  n "2 ~ ~ 4 ~ ~ 4 ~ ~ ~ 4 ~ ~ ~ 4 ~ ~"  # s "midi",
  n "~ ~ ~ ~ 1 ~ ~ ~ ~ ~ 1 ~ ~ ~ ~ ~ ~" # s "midi"
  ]

clutch 1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "0 ~ ~ 0 ~ 0 ~ ~ ~ 0 ~ ~ 0 ~ 0 ~ ~" # s "midi",
  n "~ ~ ~ ~ 5 ~ ~ ~ ~ ~ 5 ~ ~ ~ ~ 5 ~" # s "midi" # amp sine,
  n "~ ~ ~ ~ 1 ~ ~ ~ ~ ~ 1 ~ ~ ~ 1? ~ ~" # s "midi"
] 

clutch 1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "4 ~ ~ 4 ~ ~ 4 ~ ~ 4 ~ ~ ~ ~ 4 ~ ~"  # s "midi",
  n "0 ~ ~ 0 ~ 0 ~ ~ ~ 0 ~ ~ 0 ~ 0 ~ ~" # s "midi",
  n "~ ~ ~ ~ 5 ~ ~ ~ ~ ~ 5 ~ ~ ~ ~ 5 ~" # s "midi",
  n "~ ~ ~ ~ 1 ~ ~ ~ ~ ~ 1 ~ ~ ~ 1? ~ ~" # s "midi"
] 

jumpIn' 1 1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "0 ~ 0 ~ ~ 0 ~ ~ ~ 0 ~ ~ 0 ~ 0 ~ ~" # s "midi",
  n "~ 5 ~ ~ 5 ~ ~ 5 ~ ~ ~ 5 ~ ~ ~ ~ ~"  # s "midi",
  n "~ ~ ~ ~ 1 ~ ~ ~ ~ ~ 1 ~ ~ ~ ~ ~ ~" # s "midi",
  every 5 (const (n "3*34" # s "midi" # amp (fast 3 sine))) $ n "3([9 17]/2,17,[0 2 4])" # s "midi" 
] 

clutch 1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "6 ~ 6 ~ ~ 6 ~ ~ ~ 6 ~ ~ 6 ~ 6 ~ ~" # s "midi" # amp 0.23,
  n "3 ~ 3 ~ ~ 3 ~ ~ ~ 3 ~ ~ 3 ~ 3 ~ ~" # s "midi",
  n "~ 0 ~ ~ 0 ~ ~ 0 ~ ~ ~ 0 ~ ~ ~ ~ ~"  # s "midi",
  n "2 ~ ~ 4 ~ ~ 4 ~ ~ ~ 4 ~ ~ ~ 4 ~ ~"  # s "midi",
  n "~ ~ ~ ~ 1 ~ ~ ~ ~ ~ 1 ~ ~ ~ ~ ~ ~" # s "midi"
  --every 2 (speed "-1") $ n "3(13,17,[1 2 0])" # s "midi"
  ]  -- # xsdelay (range 0 10 (slow 4 sine))
     -- # binshift (range 0 2 ( 0.5 + slow 2 sine))

***

jumpIn' 1 3 $

d1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "3 ~ 3 ~ ~ 3 ~ ~ ~ 3 ~ ~ 3 ~ 3 ~ ~" # s "midi" # amp 0.5,
  n "7 ~ ~ 0 ~ ~ 0 ~ ~ ~ 0 ~ ~ ~ 0 ~ ~"  # s "midi"
]

let output = "[midi]"
in
  d1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
    n "0 ~ 0 ~ ~ 0 ~ ~ ~ 0 ~ ~ 0 ~ 0 ~ ~" # s output # amp 0.25,
    n "~ 5 ~ ~ 5 ~ ~ ~ ~ ~ ~ 5 ~ ~ ~ ~ ~"  # s output,
    n "7 ~ ~ 4 ~ ~ 4 ~ ~ ~ 4 ~ ~ ~ 4 ~ ~"  # s output
  ]  

d1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "0 ~ ~ 0 ~ 0 ~ ~ ~ 0 ~ ~ 0 ~ 0 ~ ~" # s "midi" # amp 0.24,
  n "~ ~ ~ ~ 1 ~ ~ ~ ~ ~ 2 ~ ~ ~ ~ ~ ~" # s "midi"
]

let output = "[midi, Bath]"
in
  d1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
    n "0 ~ ~ 0 ~ 0 ~ ~ ~ 0 ~ ~ 0 ~ 0 ~ ~" # s "midi" # amp 0.2,
    n "~ ~ ~ ~ 5 ~ ~ ~ ~ ~ 5 ~ ~ ~ ~ 5 ~" # s "midi" # amp 0.2284
  ] 

d1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "0 ~ 0 ~ ~ 0 ~ ~ ~ 0 ~ ~ 0 ~ 0 ~ ~" # s "midi",
  n "~ 5 ~ ~ 5 ~ ~ 5 ~ ~ ~ 5 ~ ~ ~ ~ ~"  # s "midi",
  n "~ ~ ~ ~ 1 ~ ~ ~ ~ ~ 1 ~ ~ ~ ~ ~ ~" # s "midi",
  every 5 (const (n "3*34" # s "midi")) $ n "3([9 17]/2,17,[0 2 4])" # s "midi" 
] 

d1 $ rot "<0 0 0 0 0 [3 9 2]/3>" $ stack [
  n "0 ~ 0 ~ ~ 0 ~ ~ ~ 0 ~ ~ 0 ~ 0 ~ ~" # s "midi",
  n "~ 5 ~ ~ 5 ~ ~ 5 ~ ~ ~ 5 ~ ~ ~ ~ ~"  # s "midi",
  n "7 ~ ~ 4 ~ ~ 4 ~ ~ ~ 4 ~ ~ ~ 4 ~ ~"  # s "midi", 
  n "~ ~ ~ ~ 8 ~ ~ ~ ~ ~ 8 ~ ~ ~ ~ ~ ~" # s "midi",
  n "3([9 13]/2,17,[0 2 4])" # s "midi"# gain (0.4 + slow 1.5 tri)
]


d1 $stack[
  almostNever (rot 2) $ n "0 [0 [1 1] ]/2 [2 7?] 0 0 ~" # s "midi"
 , almostNever (superimpose (fast 2)) $ n "[1*2 1*3]/2 1 1 1 [1 1*6]/4 ~ ~ ~ ~ 1 1 ~]" #s "midi"
 --,sometimes (rev) $ n "0 1 [9? [2 2*2]/2]" # s "Yeah" 
 --,sometimes (rev) $ n "0 [1 10]? [14? [2 2*4]/4]" # s "Yeah"
] # gain 0.5 

d2 $ n "[1*2 1*3]/2 1 1 1 1 ~ ~ ~ ~ 1 1 1" #s "midi"  

d3 $ sometimes (rev) $ n "0 1 [9? [2 2*2]/2]" # s "midi" 

d3 $ sometimes (rev) $ n "0 [1 10]? [14? [2 2*4]/4]" # s "midi"

d1 $ rarely (rev) $ n "0 [1 1] 2 0 0 ~" # s "midi"

d1 $ almostNever (# speed 2.0)
   $ rarely (jux (rev))
   $ rarely (# speed "-1.0")
   $ rarely (rot 2) $ n "0 [1 1] 2 0 0 ~" # s "Yeah" # room 0.2

d1 $ rarely (# speed "-1.0") $ n "0 [2 3] 4 [12 1] 15 ~" # s "Yeah"

d1 $ n "0 1 4 [3 3] 8 1" # s "Yeah"

d1 $ rarely (rev) $ n "[0 2 3] [3 0 0, 2 2 2 7]/2" # s "Yeah"

d1 $ sound "CleanWeird*2 [[CleanWeird:2*24?] CleanWeird:4]/4"

d2 $ "Yeah:1*4" #  cps (0.2 + range (slow 5 tri) 0.1 0.4) # amp 0.1

**************************************************

d1 $ n "[0(3,7), 1(2,5)]" # s "Yeah"

d1 $ n "[0*4,[2 2], 1*8]]" # s "Yeah"
  # cps (0.5 + (slow 4 sine)) -- # gain (slow 5 (range 0.5 1.0 sine))

*************************************************

d1 $ every 3 (rot 3) $ n "[[4 4 4, 2 2 2 2 2], 12 12]" # s "Yeah" # gain 0.7 # cps (slow 8 $ 0.5 + (range 0 0.4 tri))

d2 $ n "3 3 3 [3 3]? 7" # s "Yeah" # amp "0.2"

d3 $ almostNever ((# vowel "a e u i" ) |+| (# scram 0.4 ) |+| (# gain 0.4) |+| (# room 0.6)) $ n "3 3 3 [5 5 [0 1 2 3 4 ]/5]" # s "Yeah"  # gain 0.8


d1 $ sometimes (#speed "-1 1 0.5 2.0") $ sound "[[bd*4],[sn sn sn ]]"


d1 $ every 3 (rev) $ sometimes (rot 3) $ sound "bd 808 bd hh"

clutchIn 1 10 $ sound "[hh*4, odx(3,8)]"




